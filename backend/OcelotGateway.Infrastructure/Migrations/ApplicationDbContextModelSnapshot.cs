// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OcelotGateway.Infrastructure.Data;

#nullable disable

namespace OcelotGateway.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("OcelotGateway.Domain.Entities.ConfigurationVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Environment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("PublishedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("PublishedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ConfigurationVersions");
                });

            modelBuilder.Entity("OcelotGateway.Domain.Entities.RouteConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthenticationOptions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ConfigurationVersionId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("DownstreamHostAndPorts")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DownstreamHttpMethod")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DownstreamPathTemplate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DownstreamScheme")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Environment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LoadBalancerOptions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("QoSOptions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RateLimitOptions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("RouteIsCaseSensitive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpstreamHttpMethod")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpstreamHttpMethods")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpstreamPathTemplate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConfigurationVersionId");

                    b.ToTable("RouteConfigs");
                });

            modelBuilder.Entity("OcelotGateway.Domain.Entities.RouteConfig", b =>
                {
                    b.HasOne("OcelotGateway.Domain.Entities.ConfigurationVersion", null)
                        .WithMany("RouteConfigurations")
                        .HasForeignKey("ConfigurationVersionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OcelotGateway.Domain.Entities.ConfigurationVersion", b =>
                {
                    b.Navigation("RouteConfigurations");
                });
#pragma warning restore 612, 618
        }
    }
}
